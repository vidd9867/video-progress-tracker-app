{"version":3,"sources":["./src/app/components/video-progress-tracker/video-progress-tracker.component.ts","./src/app/components/video-progress-tracker/video-progress-tracker.component.html","./src/environments/environment.ts","./src/app/services/video-progress.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit, OnDestroy, ViewChild, ElementRef } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { VideoProgressService } from '../../services/video-progress.service';\nimport { VideoProgress, WatchedInterval } from '../../../models/video-progress.model';\n\n@Component({\n  selector: 'app-video-progress-tracker',\n  templateUrl: './video-progress-tracker.component.html',\n  styleUrls: ['./video-progress-tracker.component.css']\n})\nexport class VideoProgressTrackerComponent implements OnInit, OnDestroy {\n  @ViewChild('videoPlayer', { static: true }) videoRef!: ElementRef<HTMLVideoElement>;\n\n  videoData = [\n    {\n      path: 'assets/4114797-uhd_3840_2160_25fps.mp4',\n      thumbnail: 'assets/thumbnails/microscope.png',\n      title: 'How to Use Microscope and its Parts and Functions',\n      description: 'Learn how to use a microscope effectively, including its parts and functions.',\n      videoCode: 'microscope'\n    },\n    {\n      path: 'assets/3195394-uhd_3840_2160_25fps.mp4',\n      thumbnail: 'assets/thumbnails/bloodTestimonals.png',\n      title: 'Blood Testimonial ',\n      description: 'Watch testimonials related to blood tests and their importance in healthcare.',\n      videoCode: 'bloodTestimonal'\n    },\n    {\n      path: 'assets/4074364-hd_1280_720_25fps.mp4',\n      thumbnail: 'assets/thumbnails/bloodTestTude.png',\n      title: 'Blood Test Tube',\n      description: 'An informative video about blood test tubes and their usage in medical testing.',\n      videoCode: 'bloodTestTube'\n    },\n    {\n      path: 'assets/7230798-uhd_3840_2160_25fps.mp4',\n      thumbnail: 'assets/thumbnails/chemicalReaction.png',\n      title: 'Chemical Reaction',\n      description: 'Explore the fascinating world of chemical reactions and their applications.',\n      videoCode: 'chemicalReaction'\n    },\n    {\n      path: 'assets/8460351-hd_1920_1080_24fps.mp4',\n      thumbnail: 'assets/thumbnails/bloodExraction.png',\n      title: 'Blood Extraction',\n      description: 'A detailed guide on blood extraction techniques and safety protocols.',\n      videoCode: 'bloodExraction'\n    },\n    {\n      path: 'assets/8540617-uhd_4096_2160_25fps.mp4',\n      thumbnail: 'assets/thumbnails/productTesting.png',\n      title: 'Product Testing',\n      description: 'Learn about the process of product testing and its significance in quality assurance.',\n      videoCode: 'productTesting'\n    }\n  ]\n\n  // Component state\n  isPlaying = false;\n  currentTime = 0;\n  duration = 0;\n  lastRecordedTime = 0;\n\n  Math = Math;\n  \n  // Progress data\n  videoProgress: VideoProgress = {\n    videoId: 'demo-video',\n    watchedIntervals: [],\n    totalUniqueTime: 0,\n    progressPercentage: 0,\n    lastSavedPosition: 0,\n    duration: 0\n  };\n\n  mergedIntervals: WatchedInterval[] = [];\n\n  videoUrl = '';\n\n  videoCode = '';\n\n  private destroy$ = new Subject<void>();\n\n  constructor(private videoProgressService: VideoProgressService) {}\n\n  ngOnInit(): void {\n    this.videoData.forEach(video => {\n      this.videoProgressService.saveProgress(video.videoCode, this.videoProgress);\n    });\n    \n    this.videoUrl = 'assets/4114797-uhd_3840_2160_25fps.mp4';\n\n    this.videoCode = 'microscope';\n\n    // Load initial video progress\n    this.videoProgressService.loadProgress(this.videoCode)\n\n    // Subscribe to progress updates\n    this.videoProgressService.progress$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(progress => {\n        this.videoProgress = progress;\n        this.mergedIntervals = this.videoProgressService.getMergedIntervals();\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  /**\n   * Handle video time updates\n   */\n  onTimeUpdate(videoCode: string): void {\n    if (!this.videoRef?.nativeElement) return;\n\n    const video = this.videoRef.nativeElement;\n    this.currentTime = video.currentTime;\n\n    // Record continuous watching interval\n    if (this.isPlaying && Math.abs(this.currentTime - this.lastRecordedTime) < 2) {\n      // User is watching continuously (not seeking)\n      const intervalStart = Math.min(this.lastRecordedTime, this.currentTime);\n      const intervalEnd = Math.max(this.lastRecordedTime, this.currentTime);\n      this.videoProgressService.recordWatchedInterval(intervalStart, intervalEnd, videoCode);\n    }\n\n    this.lastRecordedTime = this.currentTime;\n    this.videoProgressService.updateLastPosition(videoCode, this.currentTime);\n  }\n\n  /**\n   * Handle video seeking\n   */\n  onSeeked(): void {\n    if (!this.videoRef?.nativeElement) return;\n    this.lastRecordedTime = this.videoRef.nativeElement.currentTime;\n  }\n\n  /**\n   * Handle video loaded data\n   */\n  onLoadedData(videoCode: string): void {\n    if (!this.videoRef?.nativeElement) return;\n\n    const video = this.videoRef.nativeElement;\n    this.duration = video.duration;\n    this.videoProgressService.setDuration(videoCode, this.duration);\n\n    // Resume from last saved position\n    if (this.videoProgress.lastSavedPosition > 0) {\n      video.currentTime = this.videoProgress.lastSavedPosition;\n    } else if(this.videoProgress.watchedIntervals.length) {\n      // If no last saved position, resume from the last watched interval\n      const lastInterval = this.videoProgress.watchedIntervals.slice(-1)[0];\n      video.currentTime = lastInterval.end;\n    }\n  }\n\n  /**\n   * Toggle play/pause\n   */\n  togglePlayPause(): void {\n    if (!this.videoRef?.nativeElement) return;\n\n    const video = this.videoRef.nativeElement;\n    \n    if (this.isPlaying) {\n      video.pause();\n    } else {\n      video.play();\n    }\n  }\n\n  /**\n   * Handle play event\n   */\n  onPlay(): void {\n    this.isPlaying = true;\n  }\n\n  /**\n   * Handle pause event\n   */\n  onPause(): void {\n    this.isPlaying = false;\n  }\n\n  /**\n   * Reset progress\n   */\n  resetProgress(videoCode: string): void {\n    this.videoProgressService.resetProgress(videoCode);\n    if (this.videoRef?.nativeElement) {\n      this.videoRef.nativeElement.currentTime = 0;\n    }\n  }\n\n  /**\n   * Format time for display\n   */\n  formatTime(seconds: number): string {\n    const mins = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  }\n\n  /**\n   * Get current playback position as percentage\n   */\n  getPlaybackPercentage(): number {\n    return this.duration > 0 ? (this.currentTime / this.duration) * 100 : 0;\n  }\n\n  trackByInterval(index: number, interval: WatchedInterval): string {\n  return `${interval.start}-${interval.end}`;\n  }\n\n  selectVideo( videoCode: string, videoUrl: string ): void {\n\n    this.videoUrl = videoUrl;\n    this.videoCode = videoCode;\n    // Load Video on click\n    this.videoProgressService.loadProgress(videoCode);\n  }\n\n}","<div class=\"main-layout\">\n  <div class=\"video-tracker-container\">\n  <div class=\"video-tracker-card\">\n\n\n    <!-- Video Player Section -->\n    <div class=\"video-section\">\n      \n      <!-- Video Container -->\n      <div class=\"video-container\">\n        <video controls\n          #videoPlayer\n          class=\"video-player\"\n          [src]=\"videoUrl\"\n          (timeupdate)=\"onTimeUpdate(videoCode)\"\n          (loadeddata)=\"onLoadedData(videoCode)\"\n          (seeked)=\"onSeeked()\"\n          (play)=\"onPlay()\"\n          (pause)=\"onPause()\"\n          [muted]=\"true\">\n          Your browser does not support the video tag.\n        </video>\n      </div>\n\n      <!-- Progress Statistics -->\n      <div class=\"stats-grid\">\n        <div class=\"stat-card stat-green\">\n          <div class=\"stat-content\">\n            <div class=\"stat-info\">\n              <p class=\"stat-label\">Unique Progress</p>\n              <p class=\"stat-value\">{{ videoProgress.progressPercentage | number:'1.1-1' }}%</p>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"stat-card stat-blue\">\n          <div class=\"stat-content\">\n            <div class=\"stat-info\">\n              <p class=\"stat-label\">Time Watched</p>\n              <p class=\"stat-value\">{{ formatTime(videoProgress.totalUniqueTime) }}</p>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"stat-card stat-purple\">\n          <div class=\"stat-content\">\n            <div class=\"stat-info\">\n              <p class=\"stat-label\">Segments Watched</p>\n              <p class=\"stat-value\">{{ mergedIntervals.length }}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Visual Progress Indicator -->\n      <div class=\"progress-section\">\n        <div class=\"progress-header\">\n          <h3>Viewing Progress</h3>\n          <span class=\"progress-detail\">\n            {{ videoProgress.totalUniqueTime | number:'1.0-0' }}s / {{ duration | number:'1.0-0' }}s watched\n          </span>\n        </div>\n        \n        <div class=\"main-progress-bar\">\n          <div \n            class=\"main-progress-fill\"\n            [style.width.%]=\"Math.min(videoProgress.progressPercentage, 100)\">\n          </div>\n          \n          <!-- Current position indicator -->\n          <div \n            class=\"position-indicator\"\n            [style.left.%]=\"getPlaybackPercentage()\">\n          </div>\n        </div>\n      </div>\n\n      <!-- Watched Intervals Display -->\n      <div class=\"intervals-section\" *ngIf=\"mergedIntervals.length > 0\">\n        <h4>Watched Segments</h4>\n        <div class=\"intervals-grid\">\n          <div \n            class=\"interval-chip\" \n            *ngFor=\"let interval of mergedIntervals; trackBy: trackByInterval\">\n            {{ formatTime(interval.start) }} - {{ formatTime(interval.end) }}\n          </div>\n        </div>\n      </div>\n\n      <!-- Instructions -->\n      <!-- <div class=\"instructions\">\n        <h4>How It Works:</h4>\n        <ul>\n          <li>Progress only increases when you watch NEW parts of the video</li>\n          <li>Rewatching the same section won't increase your progress</li>\n          <li>Skipping ahead doesn't count as progress until you actually watch</li>\n          <li>Your position is automatically saved and restored</li>\n        </ul>\n      </div> -->\n    </div>\n  </div>\n</div>\n\n<div class=\"video-playlist-container\">\n  <div class=\"video-playlist-card\">\n    <div class=\"video-playlist\">\n      <div class=\"video-grid\" *ngFor=\"let video of videoData\" (click)=\"selectVideo(video.videoCode, video.path)\">\n        <div class=\"video-item\">\n          <video class=\"video-thumbnail\" [src]=\"video.path\" alt=\"Video Thumbnail\" ></video>\n        </div>\n        <div class=\"video-details\">\n          <h3 class=\"video-title\">{{ video.title }}</h3>\n          <p class=\"video-description\">{{ video.description }}</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { VideoProgress, WatchedInterval, MergedIntervalsResult } from '../../models/video-progress.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VideoProgressService {\n  private progressSubject = new BehaviorSubject<VideoProgress>({\n    videoId: 'demo-video',\n    watchedIntervals: [],\n    totalUniqueTime: 0,\n    progressPercentage: 0,\n    lastSavedPosition: 0,\n    duration: 0\n  });\n\n  public progress$ = this.progressSubject.asObservable();\n\n  constructor() {\n\n  }\n\n  /**\n   * Merges overlapping intervals and calculates total unique time watched\n   */\n  private mergeIntervals(intervals: WatchedInterval[]): MergedIntervalsResult {\n    if (intervals.length === 0) {\n      return { mergedIntervals: [], totalUniqueTime: 0 };\n    }\n\n    // Sort intervals by start time\n    const sorted = [...intervals].sort((a, b) => a.start - b.start);\n    const merged: WatchedInterval[] = [sorted[0]];\n\n    for (let i = 1; i < sorted.length; i++) {\n      const current = sorted[i];\n      const lastMerged = merged[merged.length - 1];\n\n      // If current interval overlaps with the last merged interval\n      if (current.start <= lastMerged.end) {\n        // Merge by extending the end time\n        lastMerged.end = Math.max(lastMerged.end, current.end);\n      } else {\n        // No overlap, add as new interval\n        merged.push(current);\n      }\n    }\n\n    // Calculate total unique time\n    const totalUniqueTime = merged.reduce((sum, interval) => sum + (interval.end - interval.start), 0);\n\n    return { mergedIntervals: merged, totalUniqueTime };\n  }\n\n  /**\n   * Records a new watched interval\n   */\n  recordWatchedInterval(startTime: number, endTime: number, videoCode: string): void {\n    if (startTime >= endTime) return;\n\n    const currentProgress = this.progressSubject.value;\n    const newIntervals = [...currentProgress.watchedIntervals, { start: startTime, end: endTime }];\n    \n    const { mergedIntervals, totalUniqueTime } = this.mergeIntervals(newIntervals);\n    \n    const progressPercentage = currentProgress.duration > 0 \n      ? Math.min((totalUniqueTime / currentProgress.duration) * 100, 100) \n      : 0;\n\n    const updatedProgress: VideoProgress = {\n      ...currentProgress,\n      watchedIntervals: newIntervals,\n      totalUniqueTime,\n      progressPercentage\n    };\n\n    this.progressSubject.next(updatedProgress);\n    this.saveProgress(videoCode, updatedProgress);\n  }\n\n  /**\n   * Updates the video duration\n   */\n  setDuration(videoCode: string, duration: number): void {\n    const currentProgress = this.progressSubject.value;\n    const updatedProgress: VideoProgress = {\n      ...currentProgress,\n      duration\n    };\n\n    this.progressSubject.next(updatedProgress);\n    this.saveProgress(videoCode, updatedProgress);\n  }\n\n  /**\n   * Updates the last saved position\n   */\n  updateLastPosition(videoCode: string, position: number): void {\n    const currentProgress = this.progressSubject.value;\n    const updatedProgress: VideoProgress = {\n      ...currentProgress,\n      lastSavedPosition: position\n    };\n\n    this.progressSubject.next(updatedProgress);\n    this.saveProgress(videoCode, updatedProgress);\n  }\n\n  /**\n   * Gets merged intervals for display\n   */\n  getMergedIntervals(): WatchedInterval[] {\n    const currentProgress = this.progressSubject.value;\n    return this.mergeIntervals(currentProgress.watchedIntervals).mergedIntervals;\n  }\n\n  /**\n   * Resets all progress\n   */\n  resetProgress(videoCode: string): void {\n    const resetProgress: VideoProgress = {\n      videoId: 'demo-video',\n      watchedIntervals: [],\n      totalUniqueTime: 0,\n      progressPercentage: 0,\n      lastSavedPosition: 0,\n      duration: this.progressSubject.value.duration\n    };\n\n    this.progressSubject.next(resetProgress);\n    this.saveProgress(videoCode, resetProgress);\n  }\n\n  /**\n   * Save progress to storage (in memory for demo)\n   */\n  saveProgress(videoCode: string, progress: VideoProgress): void {\n    // In a real application, this would save to localStorage or send to API\n    localStorage.setItem(videoCode, JSON.stringify(progress));\n  }\n\n  /**\n   * Load progress from storage\n   */\n  loadProgress(videoCode: string): void {\n    // In a real application, this would load from localStorage or API\n    const saved = localStorage.getItem(videoCode);\n    if (saved) {\n      this.progressSubject.next(JSON.parse(saved));\n    }\n  }\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Video Progress Tracker';\n}\n","\n    <router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { VideoProgressTrackerComponent } from './components/video-progress-tracker/video-progress-tracker.component';\nimport { VideoProgressService } from './services/video-progress.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    VideoProgressTrackerComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [VideoProgressService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { VideoProgressTrackerComponent } from './components/video-progress-tracker/video-progress-tracker.component';\n\nconst routes: Routes = [\n  {\n    path: '', component: VideoProgressTrackerComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}